# Generated by Django 2.0.5 on 2018-07-05 06:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='deviceList',
            fields=[
                ('deviceName', models.CharField(max_length=50, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'List Of Devices',
            },
        ),
        migrations.CreateModel(
            name='Historicalrecord',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
                ('department', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
                ('location', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
                ('year', models.DecimalField(decimal_places=0, max_digits=4, validators=[django.core.validators.MinValueValidator(2016)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventoryManagement.deviceList')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Record Of Inventory',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
                ('department', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
                ('location', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_text', message='The text must start with, and end with, a alphanumeric character. There should NOT be any consecutive spaces too.', regex='^([a-zA-Z0-9]+\\s)*[a-zA-Z0-9]+$')])),
                ('year', models.DecimalField(decimal_places=0, max_digits=4, validators=[django.core.validators.MinValueValidator(2016)])),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventoryManagement.deviceList')),
            ],
            options={
                'verbose_name': 'Record Of Inventory',
                'verbose_name_plural': 'Records Of Inventory',
            },
        ),
        migrations.CreateModel(
            name='recordSummary',
            fields=[
            ],
            options={
                'verbose_name': 'Department Inventory',
                'verbose_name_plural': 'Departments Inventory',
                'proxy': True,
                'indexes': [],
            },
            bases=('inventoryManagement.record',),
        ),
    ]